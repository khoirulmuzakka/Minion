name: pyPI

on:
  push:
    tags:
      - 'v*'  

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Python
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pybind11 cibuildwheel scikit-build

    # Build the wheel
    - name: Build the wheel
      run: |
        python -m cibuildwheel --output-dir dist 
      env:
        CIBW_BEFORE_BUILD_MACOS: |
          mkdir -p eigen
          curl -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz | tar xz --strip-components=1 -C eigen

        CIBW_BEFORE_BUILD_LINUX: |
          mkdir -p eigen
          curl -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz | tar xz --strip-components=1 -C eigen

        CIBW_BEFORE_BUILD_WINDOWS: "powershell -Command \"if (-Not (Test-Path 'eigen')) { mkdir eigen }; Invoke-WebRequest -Uri 'https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip' -OutFile 'eigen.zip' -UseBasicParsing; if (-Not (Test-Path 'eigen.zip')) { throw 'Download failed: eigen.zip not found' }; Expand-Archive -Path 'eigen.zip' -DestinationPath 'eigen' -Force;\""



    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels_${{ runner.os }}
        path: dist/*
        overwrite: true
        retention-days: 7  
